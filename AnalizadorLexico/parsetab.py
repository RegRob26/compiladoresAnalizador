
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACORCHETE ALLAVE AMPERSANT AND APAREN APOSTROFE ASIGNAR BREAK CADENA CASE CCORCHETE CHAR CLLAVE COMA COMENTARIO COMILLAS COMMENTS COMMENTS_C99 CONST CONTINUE CPAREN DISTINTO DIV DO DOSPUNTOS DPUNTOS_DPUNTOS ELSE FLOAT FOR FUNCT_FLECHA HASHTAG ID IF IGUAL INCREMENTO INT MASMAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOSMENOS MULTI NOT NUMERO OR PRINTF PUNTO PUNTOCOMA RESTA RETURN SCANF STRUCT SUMA SWITCH TYPEDEF WHILE XORprograma : funcionesfunciones : funcion\n                 | funciones funcion\n    funcion : tipo_dato ID APAREN parametros CPAREN ALLAVE declaraciones return CLLAVEreturn : RETURN ID PUNTOCOMA\n                | RETURN expresion PUNTOCOMA\n                | empty\n                parametros : parametro\n                  | parametro COMA parametros\n                  | empty\n    empty : parametro : tipo_dato IDtipo_dato : INT\n                 | CHAR\n                 | FLOAT\n    declaraciones : declaracion\n                     | declaraciones declaracion\n    declaracion : asignacion\n                   | declara\n                   | condicional\n                   | iteracion\n                   | impresion\n                   | entrada\n    asignacion : ID ASIGNAR expresion PUNTOCOMAdeclara : tipo_dato ID PUNTOCOMA\n                | tipo_dato ID ASIGNAR expresion PUNTOCOMAexpresion : expresion_aritmetica\n                 | expresion_logica\n                 | expresion_comparacion\n                 | ID\n                 | constante\n    expresion_aritmetica : expresion SUMA expresion\n                            | expresion RESTA expresion\n                            | expresion MULTI expresion\n                            | expresion DIV expresion\n    expresion_logica : expresion AND expresion\n                        | expresion OR expresion\n    expresion_comparacion : expresion IGUAL expresion\n                              | expresion DISTINTO expresion\n                              | expresion MAYOR expresion\n                              | expresion MAYORIGUAL expresion\n                              | expresion MENOR expresion\n                              | expresion MENORIGUAL expresion\n    condicional : IF APAREN expresion CPAREN ALLAVE declaraciones CLLAVE\n                   | IF APAREN expresion CPAREN ALLAVE declaraciones CLLAVE ELSE ALLAVE declaraciones CLLAVE\n    asignacion_for : ID ASIGNAR expresioniteracion : WHILE APAREN expresion CPAREN ALLAVE declaraciones CLLAVE\n                 | DO ALLAVE declaraciones CLLAVE WHILE APAREN expresion CPAREN PUNTOCOMA\n                 | FOR APAREN asignacion_for PUNTOCOMA expresion PUNTOCOMA asignacion_for CPAREN ALLAVE declaraciones CLLAVE\n    impresion : PRINTF APAREN CADENA CPAREN PUNTOCOMA\n                 | PRINTF APAREN ID CPAREN PUNTOCOMA\n    entrada : SCANF APAREN ID CPAREN PUNTOCOMAconstante : NUMERO\n                 | CADENA\n    '
    
_lr_action_items = {'INT':([0,2,3,8,10,17,18,22,23,24,25,26,27,28,29,39,44,48,58,63,70,93,106,107,111,112,113,114,115,118,119,125,126,127,128,129,130,131,],[5,5,-2,-3,5,5,5,5,-16,-18,-19,-20,-21,-22,-23,-17,5,-25,-4,5,-24,-26,5,5,-50,-51,-52,5,5,-44,-47,5,-48,5,5,5,-45,-49,]),'CHAR':([0,2,3,8,10,17,18,22,23,24,25,26,27,28,29,39,44,48,58,63,70,93,106,107,111,112,113,114,115,118,119,125,126,127,128,129,130,131,],[6,6,-2,-3,6,6,6,6,-16,-18,-19,-20,-21,-22,-23,-17,6,-25,-4,6,-24,-26,6,6,-50,-51,-52,6,6,-44,-47,6,-48,6,6,6,-45,-49,]),'FLOAT':([0,2,3,8,10,17,18,22,23,24,25,26,27,28,29,39,44,48,58,63,70,93,106,107,111,112,113,114,115,118,119,125,126,127,128,129,130,131,],[7,7,-2,-3,7,7,7,7,-16,-18,-19,-20,-21,-22,-23,-17,7,-25,-4,7,-24,-26,7,7,-50,-51,-52,7,7,-44,-47,7,-48,7,7,7,-45,-49,]),'$end':([1,2,3,8,58,],[0,-1,-2,-3,-4,]),'ID':([4,5,6,7,11,18,20,22,23,24,25,26,27,28,29,37,39,40,42,43,44,45,46,47,48,49,63,70,71,72,73,74,75,76,77,78,79,80,81,82,88,89,93,106,107,111,112,113,114,115,116,117,118,119,125,126,127,128,129,130,131,],[9,-13,-14,-15,15,21,36,21,-16,-18,-19,-20,-21,-22,-23,50,-17,59,50,50,21,65,67,68,-25,50,21,-24,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-26,21,21,-50,-51,-52,21,21,50,65,-44,-47,21,-48,21,21,21,-45,-49,]),'APAREN':([9,30,31,33,34,35,108,],[10,42,43,45,46,47,116,]),'CPAREN':([10,12,13,14,15,17,19,50,52,53,54,55,56,57,61,62,66,67,68,94,95,96,97,98,99,100,101,102,103,104,105,110,120,121,],[-11,16,-8,-10,-12,-11,-9,-30,-27,-28,-29,-31,-53,-54,85,86,90,91,92,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-46,123,124,]),'COMA':([13,15,],[17,-12,]),'ALLAVE':([16,32,85,86,122,124,],[18,44,106,107,125,127,]),'IF':([18,22,23,24,25,26,27,28,29,39,44,48,63,70,93,106,107,111,112,113,114,115,118,119,125,126,127,128,129,130,131,],[30,30,-16,-18,-19,-20,-21,-22,-23,-17,30,-25,30,-24,-26,30,30,-50,-51,-52,30,30,-44,-47,30,-48,30,30,30,-45,-49,]),'WHILE':([18,22,23,24,25,26,27,28,29,39,44,48,63,70,87,93,106,107,111,112,113,114,115,118,119,125,126,127,128,129,130,131,],[31,31,-16,-18,-19,-20,-21,-22,-23,-17,31,-25,31,-24,108,-26,31,31,-50,-51,-52,31,31,-44,-47,31,-48,31,31,31,-45,-49,]),'DO':([18,22,23,24,25,26,27,28,29,39,44,48,63,70,93,106,107,111,112,113,114,115,118,119,125,126,127,128,129,130,131,],[32,32,-16,-18,-19,-20,-21,-22,-23,-17,32,-25,32,-24,-26,32,32,-50,-51,-52,32,32,-44,-47,32,-48,32,32,32,-45,-49,]),'FOR':([18,22,23,24,25,26,27,28,29,39,44,48,63,70,93,106,107,111,112,113,114,115,118,119,125,126,127,128,129,130,131,],[33,33,-16,-18,-19,-20,-21,-22,-23,-17,33,-25,33,-24,-26,33,33,-50,-51,-52,33,33,-44,-47,33,-48,33,33,33,-45,-49,]),'PRINTF':([18,22,23,24,25,26,27,28,29,39,44,48,63,70,93,106,107,111,112,113,114,115,118,119,125,126,127,128,129,130,131,],[34,34,-16,-18,-19,-20,-21,-22,-23,-17,34,-25,34,-24,-26,34,34,-50,-51,-52,34,34,-44,-47,34,-48,34,34,34,-45,-49,]),'SCANF':([18,22,23,24,25,26,27,28,29,39,44,48,63,70,93,106,107,111,112,113,114,115,118,119,125,126,127,128,129,130,131,],[35,35,-16,-18,-19,-20,-21,-22,-23,-17,35,-25,35,-24,-26,35,35,-50,-51,-52,35,35,-44,-47,35,-48,35,35,35,-45,-49,]),'ASIGNAR':([21,36,65,],[37,49,89,]),'RETURN':([22,23,24,25,26,27,28,29,39,48,70,93,111,112,113,118,119,126,130,131,],[40,-16,-18,-19,-20,-21,-22,-23,-17,-25,-24,-26,-50,-51,-52,-44,-47,-48,-45,-49,]),'CLLAVE':([22,23,24,25,26,27,28,29,38,39,41,48,63,70,83,84,93,111,112,113,114,115,118,119,126,128,129,130,131,],[-11,-16,-18,-19,-20,-21,-22,-23,58,-17,-7,-25,87,-24,-5,-6,-26,-50,-51,-52,118,119,-44,-47,-48,130,131,-45,-49,]),'PUNTOCOMA':([36,50,51,52,53,54,55,56,57,59,60,64,69,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,109,110,123,],[48,-30,70,-27,-28,-29,-31,-53,-54,83,84,88,93,111,112,113,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,117,-46,126,]),'NUMERO':([37,40,42,43,49,71,72,73,74,75,76,77,78,79,80,81,82,88,89,116,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'CADENA':([37,40,42,43,46,49,71,72,73,74,75,76,77,78,79,80,81,82,88,89,116,],[57,57,57,57,66,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'SUMA':([50,51,52,53,54,55,56,57,59,60,61,62,69,94,95,96,97,98,99,100,101,102,103,104,105,109,110,120,],[-30,71,-27,-28,-29,-31,-53,-54,-30,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'RESTA':([50,51,52,53,54,55,56,57,59,60,61,62,69,94,95,96,97,98,99,100,101,102,103,104,105,109,110,120,],[-30,72,-27,-28,-29,-31,-53,-54,-30,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'MULTI':([50,51,52,53,54,55,56,57,59,60,61,62,69,94,95,96,97,98,99,100,101,102,103,104,105,109,110,120,],[-30,73,-27,-28,-29,-31,-53,-54,-30,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'DIV':([50,51,52,53,54,55,56,57,59,60,61,62,69,94,95,96,97,98,99,100,101,102,103,104,105,109,110,120,],[-30,74,-27,-28,-29,-31,-53,-54,-30,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'AND':([50,51,52,53,54,55,56,57,59,60,61,62,69,94,95,96,97,98,99,100,101,102,103,104,105,109,110,120,],[-30,75,-27,-28,-29,-31,-53,-54,-30,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'OR':([50,51,52,53,54,55,56,57,59,60,61,62,69,94,95,96,97,98,99,100,101,102,103,104,105,109,110,120,],[-30,76,-27,-28,-29,-31,-53,-54,-30,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'IGUAL':([50,51,52,53,54,55,56,57,59,60,61,62,69,94,95,96,97,98,99,100,101,102,103,104,105,109,110,120,],[-30,77,-27,-28,-29,-31,-53,-54,-30,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'DISTINTO':([50,51,52,53,54,55,56,57,59,60,61,62,69,94,95,96,97,98,99,100,101,102,103,104,105,109,110,120,],[-30,78,-27,-28,-29,-31,-53,-54,-30,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'MAYOR':([50,51,52,53,54,55,56,57,59,60,61,62,69,94,95,96,97,98,99,100,101,102,103,104,105,109,110,120,],[-30,79,-27,-28,-29,-31,-53,-54,-30,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'MAYORIGUAL':([50,51,52,53,54,55,56,57,59,60,61,62,69,94,95,96,97,98,99,100,101,102,103,104,105,109,110,120,],[-30,80,-27,-28,-29,-31,-53,-54,-30,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'MENOR':([50,51,52,53,54,55,56,57,59,60,61,62,69,94,95,96,97,98,99,100,101,102,103,104,105,109,110,120,],[-30,81,-27,-28,-29,-31,-53,-54,-30,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'MENORIGUAL':([50,51,52,53,54,55,56,57,59,60,61,62,69,94,95,96,97,98,99,100,101,102,103,104,105,109,110,120,],[-30,82,-27,-28,-29,-31,-53,-54,-30,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'ELSE':([118,],[122,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'funciones':([0,],[2,]),'funcion':([0,2,],[3,8,]),'tipo_dato':([0,2,10,17,18,22,44,63,106,107,114,115,125,127,128,129,],[4,4,11,11,20,20,20,20,20,20,20,20,20,20,20,20,]),'parametros':([10,17,],[12,19,]),'parametro':([10,17,],[13,13,]),'empty':([10,17,22,],[14,14,41,]),'declaraciones':([18,44,106,107,125,127,],[22,63,114,115,128,129,]),'declaracion':([18,22,44,63,106,107,114,115,125,127,128,129,],[23,39,23,39,23,23,39,39,23,23,39,39,]),'asignacion':([18,22,44,63,106,107,114,115,125,127,128,129,],[24,24,24,24,24,24,24,24,24,24,24,24,]),'declara':([18,22,44,63,106,107,114,115,125,127,128,129,],[25,25,25,25,25,25,25,25,25,25,25,25,]),'condicional':([18,22,44,63,106,107,114,115,125,127,128,129,],[26,26,26,26,26,26,26,26,26,26,26,26,]),'iteracion':([18,22,44,63,106,107,114,115,125,127,128,129,],[27,27,27,27,27,27,27,27,27,27,27,27,]),'impresion':([18,22,44,63,106,107,114,115,125,127,128,129,],[28,28,28,28,28,28,28,28,28,28,28,28,]),'entrada':([18,22,44,63,106,107,114,115,125,127,128,129,],[29,29,29,29,29,29,29,29,29,29,29,29,]),'return':([22,],[38,]),'expresion':([37,40,42,43,49,71,72,73,74,75,76,77,78,79,80,81,82,88,89,116,],[51,60,61,62,69,94,95,96,97,98,99,100,101,102,103,104,105,109,110,120,]),'expresion_aritmetica':([37,40,42,43,49,71,72,73,74,75,76,77,78,79,80,81,82,88,89,116,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'expresion_logica':([37,40,42,43,49,71,72,73,74,75,76,77,78,79,80,81,82,88,89,116,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'expresion_comparacion':([37,40,42,43,49,71,72,73,74,75,76,77,78,79,80,81,82,88,89,116,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'constante':([37,40,42,43,49,71,72,73,74,75,76,77,78,79,80,81,82,88,89,116,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'asignacion_for':([45,117,],[64,121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> funciones','programa',1,'p_programa','AnalizadorSintactico.py',12),
  ('funciones -> funcion','funciones',1,'p_funciones','AnalizadorSintactico.py',17),
  ('funciones -> funciones funcion','funciones',2,'p_funciones','AnalizadorSintactico.py',18),
  ('funcion -> tipo_dato ID APAREN parametros CPAREN ALLAVE declaraciones return CLLAVE','funcion',9,'p_funcion','AnalizadorSintactico.py',23),
  ('return -> RETURN ID PUNTOCOMA','return',3,'p_return','AnalizadorSintactico.py',26),
  ('return -> RETURN expresion PUNTOCOMA','return',3,'p_return','AnalizadorSintactico.py',27),
  ('return -> empty','return',1,'p_return','AnalizadorSintactico.py',28),
  ('parametros -> parametro','parametros',1,'p_parametros','AnalizadorSintactico.py',32),
  ('parametros -> parametro COMA parametros','parametros',3,'p_parametros','AnalizadorSintactico.py',33),
  ('parametros -> empty','parametros',1,'p_parametros','AnalizadorSintactico.py',34),
  ('empty -> <empty>','empty',0,'p_empty','AnalizadorSintactico.py',38),
  ('parametro -> tipo_dato ID','parametro',2,'p_parametro','AnalizadorSintactico.py',41),
  ('tipo_dato -> INT','tipo_dato',1,'p_tipo_dato','AnalizadorSintactico.py',45),
  ('tipo_dato -> CHAR','tipo_dato',1,'p_tipo_dato','AnalizadorSintactico.py',46),
  ('tipo_dato -> FLOAT','tipo_dato',1,'p_tipo_dato','AnalizadorSintactico.py',47),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaraciones','AnalizadorSintactico.py',52),
  ('declaraciones -> declaraciones declaracion','declaraciones',2,'p_declaraciones','AnalizadorSintactico.py',53),
  ('declaracion -> asignacion','declaracion',1,'p_declaracion','AnalizadorSintactico.py',57),
  ('declaracion -> declara','declaracion',1,'p_declaracion','AnalizadorSintactico.py',58),
  ('declaracion -> condicional','declaracion',1,'p_declaracion','AnalizadorSintactico.py',59),
  ('declaracion -> iteracion','declaracion',1,'p_declaracion','AnalizadorSintactico.py',60),
  ('declaracion -> impresion','declaracion',1,'p_declaracion','AnalizadorSintactico.py',61),
  ('declaracion -> entrada','declaracion',1,'p_declaracion','AnalizadorSintactico.py',62),
  ('asignacion -> ID ASIGNAR expresion PUNTOCOMA','asignacion',4,'p_asignacion','AnalizadorSintactico.py',67),
  ('declara -> tipo_dato ID PUNTOCOMA','declara',3,'p_declara','AnalizadorSintactico.py',70),
  ('declara -> tipo_dato ID ASIGNAR expresion PUNTOCOMA','declara',5,'p_declara','AnalizadorSintactico.py',71),
  ('expresion -> expresion_aritmetica','expresion',1,'p_expresion','AnalizadorSintactico.py',75),
  ('expresion -> expresion_logica','expresion',1,'p_expresion','AnalizadorSintactico.py',76),
  ('expresion -> expresion_comparacion','expresion',1,'p_expresion','AnalizadorSintactico.py',77),
  ('expresion -> ID','expresion',1,'p_expresion','AnalizadorSintactico.py',78),
  ('expresion -> constante','expresion',1,'p_expresion','AnalizadorSintactico.py',79),
  ('expresion_aritmetica -> expresion SUMA expresion','expresion_aritmetica',3,'p_expresion_aritmetica','AnalizadorSintactico.py',84),
  ('expresion_aritmetica -> expresion RESTA expresion','expresion_aritmetica',3,'p_expresion_aritmetica','AnalizadorSintactico.py',85),
  ('expresion_aritmetica -> expresion MULTI expresion','expresion_aritmetica',3,'p_expresion_aritmetica','AnalizadorSintactico.py',86),
  ('expresion_aritmetica -> expresion DIV expresion','expresion_aritmetica',3,'p_expresion_aritmetica','AnalizadorSintactico.py',87),
  ('expresion_logica -> expresion AND expresion','expresion_logica',3,'p_expresion_logica','AnalizadorSintactico.py',92),
  ('expresion_logica -> expresion OR expresion','expresion_logica',3,'p_expresion_logica','AnalizadorSintactico.py',93),
  ('expresion_comparacion -> expresion IGUAL expresion','expresion_comparacion',3,'p_expresion_comparacion','AnalizadorSintactico.py',98),
  ('expresion_comparacion -> expresion DISTINTO expresion','expresion_comparacion',3,'p_expresion_comparacion','AnalizadorSintactico.py',99),
  ('expresion_comparacion -> expresion MAYOR expresion','expresion_comparacion',3,'p_expresion_comparacion','AnalizadorSintactico.py',100),
  ('expresion_comparacion -> expresion MAYORIGUAL expresion','expresion_comparacion',3,'p_expresion_comparacion','AnalizadorSintactico.py',101),
  ('expresion_comparacion -> expresion MENOR expresion','expresion_comparacion',3,'p_expresion_comparacion','AnalizadorSintactico.py',102),
  ('expresion_comparacion -> expresion MENORIGUAL expresion','expresion_comparacion',3,'p_expresion_comparacion','AnalizadorSintactico.py',103),
  ('condicional -> IF APAREN expresion CPAREN ALLAVE declaraciones CLLAVE','condicional',7,'p_condicional','AnalizadorSintactico.py',108),
  ('condicional -> IF APAREN expresion CPAREN ALLAVE declaraciones CLLAVE ELSE ALLAVE declaraciones CLLAVE','condicional',11,'p_condicional','AnalizadorSintactico.py',109),
  ('asignacion_for -> ID ASIGNAR expresion','asignacion_for',3,'p_asignacion_for','AnalizadorSintactico.py',113),
  ('iteracion -> WHILE APAREN expresion CPAREN ALLAVE declaraciones CLLAVE','iteracion',7,'p_iteracion','AnalizadorSintactico.py',117),
  ('iteracion -> DO ALLAVE declaraciones CLLAVE WHILE APAREN expresion CPAREN PUNTOCOMA','iteracion',9,'p_iteracion','AnalizadorSintactico.py',118),
  ('iteracion -> FOR APAREN asignacion_for PUNTOCOMA expresion PUNTOCOMA asignacion_for CPAREN ALLAVE declaraciones CLLAVE','iteracion',11,'p_iteracion','AnalizadorSintactico.py',119),
  ('impresion -> PRINTF APAREN CADENA CPAREN PUNTOCOMA','impresion',5,'p_impresion','AnalizadorSintactico.py',124),
  ('impresion -> PRINTF APAREN ID CPAREN PUNTOCOMA','impresion',5,'p_impresion','AnalizadorSintactico.py',125),
  ('entrada -> SCANF APAREN ID CPAREN PUNTOCOMA','entrada',5,'p_entrada','AnalizadorSintactico.py',130),
  ('constante -> NUMERO','constante',1,'p_constante','AnalizadorSintactico.py',134),
  ('constante -> CADENA','constante',1,'p_constante','AnalizadorSintactico.py',135),
]
